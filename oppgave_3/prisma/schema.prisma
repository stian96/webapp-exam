generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// I would add some onCascade commands to the foreign keys (poll in Question, and question
// in Vote). 'onCascade: Delete' would be suitable here so that data redundancy is simplified.
// Any tuple that is dependent on another tuple (Foreign Key) would be deleted in the event 
// of the primary key being deleted.
model Poll {
  id          String     @id @default(cuid())
  slug        String     @unique
  title       String
  endedAt     DateTime?
  publishedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  questions   Question[]
}

model Question {
  id        String   @id @default(cuid())
  question  String
  options   String
  vote      Vote[]
  poll      Poll     @relation(fields: [pollId], references: [id])
  pollId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id         String   @id @default(cuid())
  option     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String

  createdAt DateTime @default(now())

  @@index([questionId])
}
